name: ci.yaml
on:
  push:
    branches:
      - master
    tags:
      - "v*"
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
permissions:
  packages: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: unit-test
        run: ./gradlew :test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: ./gradlew :bootBuildImage --imageName=todo-user:latest
      - name: metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/usbharu/todo-user
          tags: |
            type=semver,pattern=v{{version}}
            type=raw,value=latest
            type=sha,prefix=,suffix=,format=short
      - name: build
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  nativeBuild:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: ./gradlew :bootBuildImage --imageName=todo-user:latest -PenableNativeBuild=true
      - name: metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/usbharu/todo-user
          tags: |
            type=semver,pattern=v{{version}}-native
            type=raw,value=latest-native
            type=sha,prefix=,suffix=-native,format=short
      - name: build
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  openapi:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # -----------------------------------------------------
      # 1. ソースコードのチェックアウトとドキュメント生成 (変更なし)
      # -----------------------------------------------------
      - name: Checkout Source Repository
        uses: actions/checkout@v4
        with:
          path: source-repo

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Generate OpenAPI docs
        working-directory: ./source-repo
        run: ./gradlew generateOpenApiDocs

      # -----------------------------------------------------
      # 2. 宛先リポジトリのチェックアウトとファイルコピー (変更なし)
      # -----------------------------------------------------
      - name: Checkout Destination Repository
        uses: actions/checkout@v4
        with:
          repository: KasumiMercury/todo-server-poc-schema  # <<< PRを作成したいリポジトリ
          path: destination-repo
          token: ${{ secrets.DOCS_REPO_PAT }} # <<< 事前準備で作成したPAT

      - name: Copy generated file
        run: |
          cp ./source-repo/build/openapi.json ./destination-repo/user-server.json

      # -----------------------------------------------------
      # 3. Pull Requestの作成と自動マージの設定
      # -----------------------------------------------------
      - name: Create Pull Request
        id: cpr # <<< ステップにIDを設定
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.DOCS_REPO_PAT }}
          path: ./destination-repo
          commit-message: "docs: Update OpenAPI specification"
          branch: "feature/update-openapi-spec"
          delete-branch: true
          base: main
          title: '[Automated] Update OpenAPI Specification'
          body: |
            Source repositoryのmasterブランチへのpushをトリガーにOpenAPIの仕様書を更新しました。

            **Source Commit:** `${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}`

            ---
            *This Pull Request was generated automatically by a GitHub Action.*

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-number != '' # <<< PRが作成された場合のみ実行
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.DOCS_REPO_PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash # マージ方法を指定 (squash | merge | rebase)